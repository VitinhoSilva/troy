name: Tests & Build

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest  # Define o runner hospedado pelo GitHub
    services:
      postgres:
        image: postgres:15.5-alpine3.17
        env:
          POSTGRES_DB: troy
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_HOST: localhost
      DB_PORT: "5432"
      DB_NAME: troy
      DB_USERNAME: root
      DB_PASSWORD: root
      DOCKER_HOST: unix:///var/run/docker.sock
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run test coverage
        run: ./gradlew test jacocoTestReport --no-daemon --no-build-cache --info

      - name: Check test coverage
        run: ./gradlew checkCoverage
        env:
          MIN_COVERAGE: '90'

      - name: Build and analyze
        if: success()  # Somente executa se o passo anterior for bem-sucedido
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info

  build:
    runs-on: ubuntu-latest  # Define o runner hospedado pelo GitHub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || contains(github.ref, 'devint')
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build the project
        run: ./gradlew build --no-daemon --no-build-cache --info
